@import "../standard";

$bg: #2196F3;
$water: #1F8DE4;
$shadow: #1B7AC7;
$pointer: #FFCC30;

$tokens: (
    "colors": (
        "bg": #2196F3,
        "water":#1F8DE4,
        "shadow":#1B7AC7,
        "pointer": #FFCC30,
    ),
    "spacing": (
        "sm": 0.5rem,
        "md": 1rem,
        "lg": 2rem,
        "margin-md": .8rem,
        "button-padding": .4rem 2rem,
    ),
    "timing": (
        "fast": 0.3s,
        "medium": 0.7s,
        "slow": 2s,
        "slow-to-fast": cubic-bezier(1, 0.46, 0.45, 0.94),
    ),
    "font": (
        "size-sm": .8rem,
        "size-md": 1rem,
        "sizePointer": 4rem,
    ),
    "layout": (
        "cardW": 15rem,
        "cardH": 12rem,
        "full": 100%,
        "lowest": 0,
        "3d": preserve-3d,
        "sm-radius": .2rem,
        "md-radius": .4rem,
        "lg-radius": .8rem,
        "line": .1rem,
    )
);

@function color($key) {
  @return map-get(map-get($tokens, "colors"), $key);
}
@function spacing($key) {
  @return map-get(map-get($tokens, "spacing"), $key);
}
@function timing($key) {
  @return map-get(map-get($tokens, "timing"), $key);
}
@function font($key) {
  @return map-get(map-get($tokens, "font"), $key);
}
@function layout($key) {
  @return map-get(map-get($tokens, "layout"), $key);
}

// Sugestão para futuro projeto ao utilizar token
// @function token($group, $key) {
//   @return map-get(map-get($tokens, $group), $key);
// }
// token("layout", "cardW")


.frame{
    @include center(column);
    background: color("bg");
    position: relative;
}

.container{

    &__water-map{
        @include position-absolute(0, 0, 0, 0);
        fill: color("water");
        border-radius: spacing("sm");
        width: layout("full");
        height: layout("full");
        z-index: layout("lowest");
        //border: 2px solid rgb(81, 255, 0);
    }

    &__flipper{
        @include center(column);
        perspective: layout("3d");
    }
    
    &__card{
        width: layout("cardW");
        height: layout("cardH");
        transform-style: layout("3d");
        position: relative;

        transition: transform timing("medium") timing("slow-to-fast");

        
        .container__flipper.active &{
            transform: rotateY(180deg);
        }
    }
    
    &__front, &__back{
        height: layout("full");
        width: layout("full");
        position: absolute;
        backface-visibility: hidden;
    }
    
    &__front{
        //border: 2px solid pink;
        @include center(column, top);
        
        .marker{
            font-size: font("sizePointer");
            color: color("pointer");
            animation: scale timing("slow") linear infinite alternate;
            cursor: pointer;
        }
        
        .circle{
            fill: color("shadow");
            animation: shadow timing("slow") linear infinite alternate;
            cursor: pointer;
        }
    }
    
    // Estilização da parte de tras
    &__back{
        height: layout("full");
        border-radius: layout("sm-radius");
        background: $white;
        transform: rotateY(180deg);
        cursor: pointer;
    }

    img{
        border-radius: layout("sm-radius") layout("sm-radius") 0 0;
    }

    &__local{
        font-size: font("size-sm");
        //border: 2px solid pink;
        height: 66%;
        @include center(column, space-between);
    }

    &__info{
        //border: 2px solid green;
        margin-top: spacing("margin-md");
    }

    &__buttons{
        //border: 2px solid red;
        width: layout("full");
        @include center(row, space-around);

        button{
            padding: spacing("button-padding");
            width: latout("full");
            height: latout("full");
            color: $water;
            background: none;
            border: none;
            cursor: pointer;
            background: $shadow;

            &:hover{
                color: $white;
            }
        }
    }

    &__line{
        width: .1rem;
        background: $water;
        height: 70%;
    }


}


@keyframes scale {
	from {
		transform: translate3d(0,0,0);
	}
	to {
		transform: translate3d(0,.5rem,0);
        
	}
}
@keyframes shadow {
    from {
        transform: scale(1) translate3d(0,0,0);
    }
    to {
        transform: scale(1.3) translate3d(0,0,0);
    }
}